# The manifest for the "client" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: client
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: '/'
  # @see: https://aws.github.io/copilot-cli/docs/developing/domain/#use-domain-in-your-existing-validated-certificates
  # No `hosted_zone` example: https://aws.github.io/copilot-cli/blogs/release-v118/#certificate-import
  alias: electroneon.site

# Configuration for your containers and service.
image:
  # Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#image-build
  build:
    dockerfile: client/Dockerfile
    context: client
    args:
      # @see: https://aws.github.io/copilot-cli/docs/developing/environment-variables/#what-are-the-default-environment-variables
      VITE_APP_NAME: ${COPILOT_APPLICATION_NAME}
      VITE_BASE_URL: /api/v1
  # Port exposed through your container to route traffic to it.
  port: 80

cpu: 256 # Number of CPU units for the task.
memory: 512 # Amount of memory in MiB used by the task.
count: 1 # Number of tasks that should be running in your service.
exec: true # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.

# Copilot's built-in managed EFS: https://aws.github.io/copilot-cli/docs/developing/storage/#managed-efs
# -- Error message: `validate "storage": cannot specify more than one
# managed volume per service`: https://github.com/aws/copilot-cli/issues/2921
# -- Solution: create a single EFS volume that will contain both `/data`
# and `/config` directories, then in the `client` service's container's
# startup script (i.e., in the `./client/Dockerfile`), create the
# necessary subdirectories within the mounted EFS volume, then use
# environment variables to use the new paths: https://caddyserver.com/docs/conventions#file-locations
storage:
  volumes:
    caddy-storage:
      efs: true
      path: /mnt/efs
      read_only: false

# Optional fields for more advanced use-cases.
#
#variables:                    # Pass environment variables as key value pairs.
#  LOG_LEVEL: info
env_file: copilot.env

#secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
#  GITHUB_TOKEN: GITHUB_TOKEN  # The key is the name of the environment variable, the value is the name of the SSM parameter.

# You can override any of the values defined above by environment.
#environments:
#  test:
#    count: 2               # Number of tasks to run for the "test" environment.
#    deployment:            # The deployment strategy for the "test" environment.
#       rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.
